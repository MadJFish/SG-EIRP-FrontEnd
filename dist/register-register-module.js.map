{"version":3,"sources":["./src/app/register/register.component.html","./src/app/_models/_agencyAndProgram/educationAgencyBranch.ts","./src/app/_models/_agencyAndProgram/educationAgencyDetails.ts","./src/app/_models/_agencyAndProgram/educationAgencyLeadership.ts","./src/app/_models/_agencyAndProgram/program.ts","./src/app/_models/_agencyAndProgram/tutorAgency.ts","./src/app/_models/_common/addressDto.ts","./src/app/_models/_common/bulletin.ts","./src/app/_models/_common/code.ts","./src/app/_models/_common/documentDto.ts","./src/app/_models/_common/fileUploadForm.ts","./src/app/_models/_common/privilegeDto.ts","./src/app/_models/_common/roleDto.ts","./src/app/_models/_common/teacher.ts","./src/app/_models/_loginAndEnrollment/UserResponseDto.ts","./src/app/_models/_loginAndEnrollment/accessToken.ts","./src/app/_models/_loginAndEnrollment/signUpRequest.ts","./src/app/_models/_loginAndEnrollment/user.ts","./src/app/_models/index.ts","./src/app/register/register-routing.module.ts","./src/app/register/register.component.css","./src/app/register/register.component.ts","./src/app/register/register.module.ts"],"names":[],"mappings":"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","file":"register-register-module.js","sourcesContent":["export default \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"card card-stats\\\">\\n            <div class=\\\"card-header card-header-danger\\\">\\n                <h3 class=\\\"card-title\\\">SG-EIRP Tutor Registration</h3>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                    <span>Personal Particulars</span>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"email\\\">Email <span style=\\\"color:red\\\">*</span></label>\\n                        <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username <span style=\\\"color:red\\\">*</span></label>\\n                        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Password <span style=\\\"color:red\\\">*</span></label>\\n                        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                            <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"firstName\\\">First Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.firstName.errors.required\\\">First name is not valid</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"lastName\\\">Last Name</label>\\n                            <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.lastName.errors.required\\\">Last name is not valid</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <span>Tutor Agency</span>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"agencyName\\\">Agency Name <span style=\\\"color:red\\\">*</span></label>\\n                        <input type=\\\"text\\\" formControlName=\\\"agencyName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.agencyName.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.agencyName.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.agencyName.errors.required\\\">Agency name is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"phone\\\">Phone</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"phone\\\" class=\\\"form-control\\\" />\\n                    </div>\\n\\n                    <!--\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"age\\\">Age</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"age\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.age.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.age.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.age.errors.required\\\">Age is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"eduLevel\\\">Education Level</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"eduLevel\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.eduLevel.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.eduLevel.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.eduLevel.errors.required\\\">Education level is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"gender\\\">Gender</label>\\n                        <input type=\\\"text\\\" formControlName=\\\"gender\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.gender.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.gender.errors\\\" class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.gender.errors.required\\\">Gender is required</div>\\n                        </div>\\n                    </div>\\n                    -->\\n                    <br />\\n                    <div class=\\\"form-group\\\">\\n                        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">\\n                            <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                            Register\\n                        </button>\\n                        <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Cancel</a>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { AddressDto } from \"../_common/addressDto\";\n\nexport class EducationAgencyBranch {\n    nearbyMRT: string;\n    name: string;\n    phone: string;\n    email: string;\n    address: AddressDto;\n}\n\n\n\n\n","import { AddressDto } from \"../_common/addressDto\";\nimport { EducationAgencyBranch } from \"./educationAgencyBranch\";\nimport { Program } from \"./program\";\nimport { Bulletin } from \"../_common/bulletin\";\nimport { Teacher } from \"../_common/teacher\";\nimport { EducationAgencyLeadership } from \"../index\";\n\nexport class EducationAgencyDetails {\n    id: string;\n    name: string;\n    imageUrl: string;\n    photos: string[];\n    vedioUrl: string[];\n    promoText: string;\n    featured: boolean;\n    targetEduLevels: string[];\n    phone: string;\n    email: string;\n    aboutUs: string;\n    programes: Program[];\n    hqAddress: AddressDto;\n    branches: EducationAgencyBranch[];\n    whatsUpNews: Bulletin[];\n    teachers: Teacher[];\n    leadershipTeam: EducationAgencyLeadership[];\n}","export class EducationAgencyLeadership {\n    id: string;\n    imageUrl: string;\n    name: string;\n    description: string;\n}","export class Program {\n    programId: string;\n    programName: string;\n    programDescription: string;\n    programDetailParagraph: string;\n    imageUrl: string;\n    subject: string;\n    forEduLevel: string;\n    forMinAge: number;\n    forMaxAge: number;\n    duration: number;\n    durationUnit: string;\n    costType: string;\n    cost: number;\n    costUnit: string;\n    availableBranch: string[];\n}","import { DocumentDto } from '../index';\n\nexport class TutorAgencyDto {\n    id: string;\n    name: string;\n    promoText: string;\n    featured: boolean;\n    targetEduLevels: string[];\n    tutorAgencyDocuments: DocumentDto[];\n    phone: string;\n    email: string;\n    aboutUs: string;\n    subjects: string[];\n    locations: string[];\n    \n    setValue(data: any) {\n        this.name = data.agencyName;\n        this.promoText = \"\";\n        this.featured = false;\n        this.targetEduLevels = [];\n        this.tutorAgencyDocuments = [];\n        this.phone = data.phone;\n        this.email = \"\";\n        this.aboutUs = \"\";\n        this.subjects = [];\n        this.locations = [];\n    }\n}\n\nexport class TutorEnrollRequestDto {\n    username: string;\n    password: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    tutorAgent: TutorAgencyDto;\n\n    setValue(data: any) {\n        this.username = data.username;\n        this.password = data.password;\n        this.email = data.email;\n        this.firstName = data.firstName;\n        this.lastName = data.lastName;\n        this.tutorAgent = new TutorAgencyDto();\n        this.tutorAgent.setValue(data);\n    }\n}","export class AddressDto {\n    id: string;\n    street: string;\n    unitNo: string;\n    blockNo: string;\n    postalCode: string;\n    latitude: number;\n    longitude: number;\n    \n    constructor() {\n        this.blockNo = \"\";\n        this.latitude = 0;\n        this.longitude = 0;\n        this.postalCode = \"\";\n        this.street = \"\";\n        this.unitNo = \"\";\n    }\n}","export class Bulletin {\n    id: string;\n    publishedDate: string;\n    title: string;\n    imageUrl: string;\n    paragraphInHtml: string;\n}","export class Code {\n    id: string;\n    type: string;\n    value: string;\n    description: string;\n    isChecked: boolean;\n\n    constructor () {\n        this.isChecked = false;\n    }\n}","export class DocumentDto {\n    documentId: string;\n    documentName: string;\n    documentType: string;\n    mime: string;\n    documentUrl: string;\n    uploadType: string;\n    referenceId: string;\n}","import { DocumentDto } from './documentDto';\nimport { FileLikeObject, FileItem } from \"ng2-file-upload\";\n\nexport class FileUploadForm {\n    file: FileItem;\n    document: DocumentDto;\n}","export class PrivilegeDto {\n    id:string;\n    privilegeDesc: string;\n    privilege: string;\n}","import { PrivilegeDto } from \"./privilegeDto\";\n\nexport class RoleDto {\n    id:string;\n    roleName: string;\n    roleDesc: string;\n    privileges: PrivilegeDto[];\n}","export class Teacher {\n    id: string;\n    imageUrl: number;\n    name: number;\n    description: string;\n    focusSubjects: string[];\n    teachProgramsIds: string[];\n}","import { AddressDto } from \"../_common/addressDto\";\nimport { RoleDto } from \"../_common/roleDto\";\n\nexport class UserResponseDto {\n    id: string;\n    username: string;\n    email: string;\n    firstName: string;\n    lastName: string;\n    registerDatetime: string;\n    lastLoginDatetime: string;\n    birthDate: string;\n    gender: string;\n    address: AddressDto;\n    role: RoleDto;\n    tutorAgentId: string;\n    status: string;\n}","export class AccessToken {\n    access_token: string;\n    token_type: string;\n    refresh_token: string;\n    expires_in: number;\n    scope: string;\n    jti: string;\n\n    constructor(\n        access_token: string,\n        token_type: string,\n        refresh_token: string,\n        expires_in: number,\n        scope: string,\n        jti: string\n    ) {\n        this.access_token = access_token;\n        this.token_type = token_type;\n        this.refresh_token = refresh_token;\n        this.expires_in = expires_in;\n        this.scope = scope;\n        this.jti = jti;\n    }\n}","import { AddressDto } from \"../_common/addressDto\";\n\nexport class SignUpRequest {\n    userId: string;\n    username: string;\n    password: string;\n    email: string;\n    educationLevel: string;\n    parent: boolean;\n    gender: string;\n    phoneNumber: string;\n    age: number;\n    studentName: string;\n    relationShip: string;\n    otherRelationShip: string;\n    address: AddressDto;\n    token: string;\n\n    constructor() {\n        this.userId = \"\";\n        this.username = \"\";\n        this.password = \"\";\n        this.email = \"\";\n        this.educationLevel = \"\";\n        this.parent = false;\n        this.gender = \"MALE\";\n        this.phoneNumber = \"\";\n        this.age = 0;\n        this.studentName = \"\";\n        this.relationShip = \"\";\n        this.otherRelationShip = \"\";\n        this.address = new AddressDto();\n        this.token = \"\";\n    }\n}","export class User {\n    userId: number;\n    username: string;\n    password: string;\n    age: number;\n    educationLevel: string;\n    email: string;\n    gender: string;\n    relationShip: string;\n    otherRelationShip: string;\n    parent: boolean;\n    phoneNumber: string;\n    studentName: string;\n\n    token: string;\n\n    constructor(\n        username: string,\n        password: string,\n        age: number,\n        educationLevel: string,\n        email: string,\n        gender: string,\n        relationShip: string,\n        otherRelationShip: string,\n        parent: boolean,\n        phoneNumber: string,\n        studentName: string,\n        token: string\n    ) {\n        this.username = username;\n        this.password = password;\n        this.age = age;\n        this.educationLevel = educationLevel;\n        this.email = email;\n        this.gender = gender;\n        this.relationShip = relationShip;\n        this.otherRelationShip = otherRelationShip;\n        this.parent = parent;\n        this.phoneNumber = phoneNumber;\n        this.studentName = studentName;\n        this.token = token;\n    }\n}","export * from './_agencyAndProgram/educationAgencyBranch';\nexport * from './_agencyAndProgram/educationAgencyDetails';\nexport * from './_agencyAndProgram/educationAgencyLeadership';\nexport * from './_agencyAndProgram/program';\nexport * from './_agencyAndProgram/tutorAgency';\n\nexport * from './_common/addressDto';\nexport * from './_common/bulletin';\nexport * from './_common/code';\nexport * from './_common/documentDto';\nexport * from './_common/fileUploadForm';\nexport * from './_common/privilegeDto';\nexport * from './_common/roleDto';\nexport * from './_common/teacher';\n\nexport * from './_loginAndEnrollment/accessToken';\nexport * from './_loginAndEnrollment/signUpRequest';\nexport * from './_loginAndEnrollment/user';\nexport * from './_loginAndEnrollment/UserResponseDto';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterComponent } from './register.component';\n\nconst routes: Routes = [\n  { path: '', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RegistrationRoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService, UserService, AuthenticationService } from '../_services';\nimport { GloblConstants } from 'app/common/global-constants';\nimport { TutorEnrollRequestDto } from 'app/_models/index';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n    styleUrls: ['./register.component.css']\n\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private userService: UserService,\n        private alertService: AlertService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentAccessTokenValue) {\n            // this.router.navigate(['/dashboard']);\n        }\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            email: ['', Validators.required],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            firstName: [''],\n            lastName: [''],\n            agencyName: ['', Validators.required],\n            phone: ['']\n        });\n\n        let storedValue = localStorage.getItem(GloblConstants.registrationForm);\n        var obj = JSON.parse(storedValue);\n\n\n        console.log(storedValue);\n\n        // load saved temperary registration form values if it exists\n        if (storedValue) {\n            this.registerForm.controls[\"email\"].setValue(obj.email);\n            this.registerForm.controls[\"username\"].setValue(obj.username);\n            this.registerForm.controls[\"password\"].setValue(obj.password);\n            this.registerForm.controls[\"firstName\"].setValue(obj.firstName);\n            this.registerForm.controls[\"lastName\"].setValue(obj.lastName);\n            this.registerForm.controls[\"agencyName\"].setValue(obj.agencyName);\n            this.registerForm.controls[\"phone\"].setValue(obj.phone);\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.registerForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n\n        // Save the inputs of registration form as temperary stored data\n        localStorage.setItem(GloblConstants.registrationForm, JSON.stringify(this.registerForm.value));\n\n        // parse the register form to tutor enroll request\n        let request: TutorEnrollRequestDto = new TutorEnrollRequestDto();\n        request.setValue(this.registerForm.value);\n\n        console.log(\"request: \" + JSON.stringify(request));\n        this.userService.register(request)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration successful', true);\n                    // clean local temp storage for sign up data\n                    localStorage.removeItem(GloblConstants.registrationForm);\n                    this.router.navigate(['/login']);\n                });\n\n            /*\n            ,\n                (error: HttpResponse<any>) => {\n                    this.alertService.error(error.body);\n                    console.log(\"error: \" + error);\n                    this.loading = false;\n                }\n            */\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RegistrationRoutingModule } from './register-routing.module';\nimport { RegisterComponent } from './register.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RegistrationRoutingModule\n  ],\n  declarations: [RegisterComponent],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class RegistrationModule { }"],"sourceRoot":"webpack:///"}